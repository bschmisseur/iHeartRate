{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = _interopRequireDefault(require(\"../../addLeadingZeros/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return (0, _index.default)(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : (0, _index.default)(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return (0, _index.default)(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return (0, _index.default)(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return (0, _index.default)(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return (0, _index.default)(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return (0, _index.default)(fractionalSeconds, token.length);\n  }\n};\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/frontend-fire/node_modules/date-fns/_lib/format/lightFormatters/index.js"],"names":["Object","defineProperty","exports","value","default","_index","_interopRequireDefault","require","obj","__esModule","formatters","y","date","token","signedYear","getUTCFullYear","year","length","M","month","getUTCMonth","String","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","Math","floor","pow","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAG;AACf;AACAC,EAAAA,CAAC,EAAE,WAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,UAAU,GAAGF,IAAI,CAACG,cAAL,EAAjB,CATwB,CASgB;;AAExC,QAAIC,IAAI,GAAGF,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,IAAIA,UAA7C;AACA,WAAO,CAAC,GAAGT,MAAM,CAACD,OAAX,EAAoBS,KAAK,KAAK,IAAV,GAAiBG,IAAI,GAAG,GAAxB,GAA8BA,IAAlD,EAAwDH,KAAK,CAACI,MAA9D,CAAP;AACD,GAfc;AAgBf;AACAC,EAAAA,CAAC,EAAE,WAAUN,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,QAAIM,KAAK,GAAGP,IAAI,CAACQ,WAAL,EAAZ;AACA,WAAOP,KAAK,KAAK,GAAV,GAAgBQ,MAAM,CAACF,KAAK,GAAG,CAAT,CAAtB,GAAoC,CAAC,GAAGd,MAAM,CAACD,OAAX,EAAoBe,KAAK,GAAG,CAA5B,EAA+B,CAA/B,CAA3C;AACD,GApBc;AAqBf;AACAG,EAAAA,CAAC,EAAE,WAAUV,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,WAAO,CAAC,GAAGR,MAAM,CAACD,OAAX,EAAoBQ,IAAI,CAACW,UAAL,EAApB,EAAuCV,KAAK,CAACI,MAA7C,CAAP;AACD,GAxBc;AAyBf;AACAO,EAAAA,CAAC,EAAE,WAAUZ,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,QAAIY,kBAAkB,GAAGb,IAAI,CAACc,WAAL,KAAqB,EAArB,IAA2B,CAA3B,GAA+B,IAA/B,GAAsC,IAA/D;;AAEA,YAAQb,KAAR;AACE,WAAK,GAAL;AACA,WAAK,IAAL;AACE,eAAOY,kBAAkB,CAACE,WAAnB,EAAP;;AAEF,WAAK,KAAL;AACE,eAAOF,kBAAP;;AAEF,WAAK,OAAL;AACE,eAAOA,kBAAkB,CAAC,CAAD,CAAzB;;AAEF,WAAK,MAAL;AACA;AACE,eAAOA,kBAAkB,KAAK,IAAvB,GAA8B,MAA9B,GAAuC,MAA9C;AAbJ;AAeD,GA5Cc;AA6Cf;AACAG,EAAAA,CAAC,EAAE,WAAUhB,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,WAAO,CAAC,GAAGR,MAAM,CAACD,OAAX,EAAoBQ,IAAI,CAACc,WAAL,KAAqB,EAArB,IAA2B,EAA/C,EAAmDb,KAAK,CAACI,MAAzD,CAAP;AACD,GAhDc;AAiDf;AACAY,EAAAA,CAAC,EAAE,WAAUjB,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,WAAO,CAAC,GAAGR,MAAM,CAACD,OAAX,EAAoBQ,IAAI,CAACc,WAAL,EAApB,EAAwCb,KAAK,CAACI,MAA9C,CAAP;AACD,GApDc;AAqDf;AACAa,EAAAA,CAAC,EAAE,WAAUlB,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,WAAO,CAAC,GAAGR,MAAM,CAACD,OAAX,EAAoBQ,IAAI,CAACmB,aAAL,EAApB,EAA0ClB,KAAK,CAACI,MAAhD,CAAP;AACD,GAxDc;AAyDf;AACAe,EAAAA,CAAC,EAAE,WAAUpB,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,WAAO,CAAC,GAAGR,MAAM,CAACD,OAAX,EAAoBQ,IAAI,CAACqB,aAAL,EAApB,EAA0CpB,KAAK,CAACI,MAAhD,CAAP;AACD,GA5Dc;AA6Df;AACAiB,EAAAA,CAAC,EAAE,WAAUtB,IAAV,EAAgBC,KAAhB,EAAuB;AACxB,QAAIsB,cAAc,GAAGtB,KAAK,CAACI,MAA3B;AACA,QAAImB,YAAY,GAAGxB,IAAI,CAACyB,kBAAL,EAAnB;AACA,QAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAGG,IAAI,CAACE,GAAL,CAAS,EAAT,EAAaN,cAAc,GAAG,CAA9B,CAA1B,CAAxB;AACA,WAAO,CAAC,GAAG9B,MAAM,CAACD,OAAX,EAAoBkC,iBAApB,EAAuCzB,KAAK,CAACI,MAA7C,CAAP;AACD;AAnEc,CAAjB;AAqEA,IAAIyB,QAAQ,GAAGhC,UAAf;AACAR,OAAO,CAACE,OAAR,GAAkBsC,QAAlB;AACAC,MAAM,CAACzC,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = _interopRequireDefault(require(\"../../addLeadingZeros/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return (0, _index.default)(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : (0, _index.default)(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return (0, _index.default)(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return (0, _index.default)(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return (0, _index.default)(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return (0, _index.default)(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return (0, _index.default)(fractionalSeconds, token.length);\n  }\n};\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}