{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/frontend-fire/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport HeartSerivce from './../services/HeartRateService';\nimport SideBar from '../components/Navigation/SideBar';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Cookies from 'universal-cookie';\nimport BPMCard from './../components/Dashboard/BPMCard';\nimport Table from './../components/Dashboard/Table';\nimport Graph from './../components/Dashboard/Graph';\nimport NoData from './../components/Dashboard/NoData';\nimport moment from 'moment';\nimport Heading from './../components/Dashboard/Heading';\nimport Footer from './../components/Navigation/Footer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport SelectDates from './../components/Dashboard/SelectDates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  content: {\n    paddingTop: '25px',\n    paddingRight: '25px',\n    paddingLeft: '110px',\n    '@media (min-width: 900px)': {\n      paddingLeft: '265px'\n    }\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '300',\n    fontSize: '28px'\n  },\n  tableHeight: {\n    height: '100%',\n    '@media (min-width:1150px)': {\n      height: '78vh'\n    }\n  },\n  output: {\n    textAlign: 'left',\n    fontWeight: '100',\n    fontSize: '22px'\n  },\n  graphStyle: {\n    overflowX: 'unset',\n    overflowY: 'unset',\n    '@media (min-width:600px)': {\n      width: '100%',\n      minWidth: '465px',\n      overflowX: 'scroll',\n      overflowY: 'hidden'\n    }\n  }\n}));\n\nfunction createData(unNum, bpm, date) {\n  return {\n    unNum,\n    bpm,\n    date\n  };\n}\n\nconst Dashboard = () => {\n  _s();\n\n  const matchWidth = useMediaQuery('(min-width:1150px)');\n  const matchWidthSec = useMediaQuery('(min-width:600px)');\n  const classes = useStyles();\n  const cookies = new Cookies();\n  const curAppleId = cookies.get('currAppleId');\n  const displayName = cookies.get('displayName');\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openNoData, setOpenNoData] = useState(false);\n  const [datesButtonDis, setDatesButtonDis] = useState(false);\n  const [openDate, setOpenDate] = useState(false);\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = useState(new Date());\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  useEffect(() => {\n    HeartSerivce.getUsers(curAppleId).then(response => {\n      let arr = [];\n      Object.keys(response.data).forEach(function (key) {\n        let currDate = moment(response.data[key].date);\n        let HeartRate = {\n          bpm: response.data[key].bpm,\n          date: currDate,\n          user_id: response.data[key].userid\n        };\n        arr.push(HeartRate);\n      });\n      let arrTable = arr.reverse();\n      setLastRec(arrTable[0].bpm);\n\n      if (arrTable.length <= 0) {\n        setDatesButtonDis(true);\n        setOpenNoData(true);\n      } else {\n        setHeartData(arrTable);\n        let data = [];\n\n        for (let i = 0; i < arrTable.length; i++) {\n          data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n        }\n\n        setRows(data);\n        generteGraphData(arrTable, arrTable.length, rowsPerPage, page);\n      }\n    });\n  }, [curAppleId, page, rowsPerPage]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    generteGraphData(heartData, rows.length, rowsPerPage, newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0); //updateGraph(0, +event.target.value, heartData);\n\n    generteGraphData(heartData, rows.length, +event.target.value, page);\n  };\n\n  const handleCloseNoData = () => {\n    setOpenNoData(false);\n  };\n\n  const handleClickOpenDate = () => {\n    setOpenDate(true);\n  };\n\n  const handleCloseDate = () => {\n    setOpenDate(false);\n  };\n\n  const handleDateChangeFrom = date => {\n    setSelectedDateFrom(date);\n  };\n\n  const handleDateChangeTo = date => {\n    setSelectedDateTo(date);\n  };\n\n  const handleReset = () => {};\n\n  const generteGraphData = (tableData, length, numElements, page) => {\n    let chartdata = \"{\";\n    let currAveRate = 0;\n\n    for (let i = page * numElements; i < page * numElements + numElements; i++) {\n      if (i > tableData.length - 1) {\n        chartdata = chartdata.substr(0, chartdata.length - 1);\n        break;\n      }\n\n      currAveRate += tableData[i].bpm;\n      chartdata += '\"' + tableData[i].date.format('MMM D h:m.s') + '\": ' + tableData[i].bpm;\n\n      if (i !== page * numElements + numElements - 1) {\n        chartdata += \",\";\n      }\n    }\n\n    chartdata += \"}\";\n    setData(JSON.parse(chartdata));\n    setAvgRate(Math.round(currAveRate / numElements));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NoData, {\n      displayName: displayName,\n      openNoData: openNoData,\n      setOpenNoData: setOpenNoData,\n      handleCloseNoData: handleCloseNoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectDates, {\n      openDate: openDate,\n      handleCloseDate: handleCloseDate,\n      selectedDateFrom: selectedDateFrom,\n      selectedDateTo: selectedDateTo,\n      handleDateChangeFrom: handleDateChangeFrom,\n      handleDateChangeTo: handleDateChangeTo,\n      handleReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          displayName: displayName,\n          datesButtonDis: datesButtonDis,\n          handleClickOpenDate: handleClickOpenDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: matchWidth ? 6 : 12,\n            className: classes.tableHeight,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '10px',\n                height: '100%',\n                minHeight: '78vh'\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                rows: rows,\n                page: page,\n                rowsPerPage: rowsPerPage,\n                handleChangePage: handleChangePage,\n                handleChangeRowsPerPage: handleChangeRowsPerPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: matchWidth ? 6 : 12,\n            style: {\n              height: '78vh'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.graphStyle,\n              style: {\n                padding: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Graph, {\n                data: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: matchWidthSec ? 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    paddingRight: '10px',\n                    paddingLeft: '10px',\n                    paddingTop: '10px',\n                    width: '100%',\n                    minHeight: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(BPMCard, {\n                    title: \"Average Heart Rate\",\n                    bpm: avgRate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: matchWidthSec ? 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    paddingRight: '10px',\n                    paddingLeft: '10px',\n                    paddingTop: '10px',\n                    minHeight: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(BPMCard, {\n                    title: \"Last Recoded Heart Rate\",\n                    bpm: lastRec\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"rH9Pdmz8L79hwQr0KOFJgq+7nVA=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useStyles];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/frontend-fire/src/pages/Dashboard.js"],"names":["useState","useEffect","HeartSerivce","SideBar","makeStyles","Grid","Cookies","BPMCard","Table","Graph","NoData","moment","Heading","Footer","useMediaQuery","SelectDates","useStyles","theme","content","paddingTop","paddingRight","paddingLeft","welcome","textAlign","fontWeight","fontSize","tableHeight","height","output","graphStyle","overflowX","overflowY","width","minWidth","createData","unNum","bpm","date","Dashboard","matchWidth","matchWidthSec","classes","cookies","curAppleId","get","displayName","heartData","setHeartData","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","openNoData","setOpenNoData","datesButtonDis","setDatesButtonDis","openDate","setOpenDate","avgRate","setAvgRate","lastRec","setLastRec","selectedDateFrom","setSelectedDateFrom","Date","selectedDateTo","setSelectedDateTo","data","setData","JSON","parse","getUsers","then","response","arr","Object","keys","forEach","key","currDate","HeartRate","user_id","userid","push","arrTable","reverse","length","i","format","generteGraphData","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleCloseNoData","handleClickOpenDate","handleCloseDate","handleDateChangeFrom","handleDateChangeTo","handleReset","tableData","numElements","chartdata","currAveRate","substr","Math","round","padding","minHeight"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport HeartSerivce from './../services/HeartRateService';\nimport SideBar from '../components/Navigation/SideBar';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Cookies from 'universal-cookie';\nimport BPMCard from './../components/Dashboard/BPMCard';\nimport Table from './../components/Dashboard/Table';\nimport Graph from './../components/Dashboard/Graph';\nimport NoData from './../components/Dashboard/NoData';\nimport moment from 'moment';\nimport Heading from './../components/Dashboard/Heading';\nimport Footer from './../components/Navigation/Footer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport SelectDates from './../components/Dashboard/SelectDates';\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingTop: '25px',\n        paddingRight: '25px',\n        paddingLeft: '110px',\n        '@media (min-width: 900px)': {\n            paddingLeft: '265px',\n          }, \n    },\n    welcome: {\n        textAlign: 'left',\n        fontWeight: '300',\n        fontSize: '28px'\n    },\n    tableHeight: {\n        height: '100%',\n        '@media (min-width:1150px)': {\n            height: '78vh'\n        },\n    },\n    output: {\n        textAlign: 'left',\n        fontWeight: '100',\n        fontSize: '22px'\n    },\n    graphStyle: {\n        overflowX: 'unset',\n        overflowY: 'unset',\n        '@media (min-width:600px)': {\n            width: '100%',\n            minWidth: '465px', \n            overflowX: 'scroll',\n            overflowY: 'hidden',\n        }, \n    }\n}));\n\nfunction createData(unNum, bpm, date) {\n    return {unNum, bpm, date };\n}\n\nconst Dashboard = () => {\n    const matchWidth = useMediaQuery('(min-width:1150px)');\n    const matchWidthSec = useMediaQuery('(min-width:600px)');\n\n    const classes = useStyles();\n    const cookies = new Cookies();\n    const curAppleId = cookies.get('currAppleId');\n    const displayName = cookies.get('displayName');\n    const [heartData, setHeartData] = useState([]);\n    const [rows, setRows] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [openNoData, setOpenNoData] = useState(false);\n    const [datesButtonDis, setDatesButtonDis] = useState(false);\n    const [openDate, setOpenDate] = useState(false);\n    const [avgRate, setAvgRate] = useState(0);\n    const [lastRec, setLastRec] = useState(0);\n    const [selectedDateFrom, setSelectedDateFrom] = useState(new Date());\n    const [selectedDateTo, setSelectedDateTo] = useState(new Date());\n    const [data, setData] = useState(JSON.parse(\"{}\"));\n\n\n    useEffect(() => {\n        HeartSerivce.getUsers(curAppleId).then(response => {\n            let arr = [];\n            Object.keys(response.data).forEach(function(key) {\n                let currDate = moment(response.data[key].date);\n                let HeartRate = {\n                    bpm: response.data[key].bpm,\n                    date: currDate,\n                    user_id: response.data[key].userid\n                }\n                arr.push(HeartRate);\n            });\n            let arrTable = arr.reverse();\n            setLastRec(arrTable[0].bpm);\n            if(arrTable.length <= 0)\n            {\n                setDatesButtonDis(true);\n                setOpenNoData(true);\n            } else {\n                setHeartData(arrTable);\n                let data = [];\n                for(let i = 0; i < arrTable.length; i++){\n                    data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n                }\n                setRows(data);\n                generteGraphData(arrTable, arrTable.length, rowsPerPage, page)\n            }\n        })\n    }, [curAppleId, page, rowsPerPage])\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        generteGraphData(heartData, rows.length, rowsPerPage, newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        //updateGraph(0, +event.target.value, heartData);\n        generteGraphData(heartData, rows.length, +event.target.value, page);\n    };\n\n    const handleCloseNoData = () => {\n        setOpenNoData(false);\n    };\n\n    const handleClickOpenDate = () => {\n        setOpenDate(true);\n    };\n\n    const handleCloseDate = () => {\n        setOpenDate(false);\n    };\n\n    const handleDateChangeFrom = (date) => {\n        setSelectedDateFrom(date);\n    };\n\n    const handleDateChangeTo = (date) => {\n        setSelectedDateTo(date);\n    };\n\n    const handleReset = () => {\n\n    }\n\n    const generteGraphData = (tableData, length, numElements, page) => {\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        for(let i = ((page * numElements)); i < ((page * numElements) + numElements); i++){\n            if(i > tableData.length - 1)\n            {\n                chartdata = chartdata.substr(0, chartdata.length -1);\n                break; \n            }\n            currAveRate += tableData[i].bpm;\n            chartdata += '\"' + tableData[i].date.format('MMM D h:m.s') + '\": ' + tableData[i].bpm;\n            if(i !== ((page * numElements) + numElements) - 1){\n                chartdata += \",\";\n            }\n        }\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / numElements));\n    }\n\n    return (\n        <div>\n            <NoData \n                displayName={displayName}\n                openNoData={openNoData}\n                setOpenNoData={setOpenNoData}\n                handleCloseNoData={handleCloseNoData}\n            />\n            <SelectDates\n                openDate={openDate}\n                handleCloseDate={handleCloseDate}\n                selectedDateFrom={selectedDateFrom}\n                selectedDateTo= {selectedDateTo}\n                handleDateChangeFrom={handleDateChangeFrom}\n                handleDateChangeTo={handleDateChangeTo}\n                handleReset={handleReset}\n            />\n            <SideBar/>\n            <div className={classes.content}>\n                <Grid>\n                    <Heading \n                        displayName={displayName}\n                        datesButtonDis={datesButtonDis}\n                        handleClickOpenDate={handleClickOpenDate}\n                    />\n                    <Grid container>\n                        <Grid item sm={matchWidth ? 6 : 12} className={classes.tableHeight}>\n                            <div style={{padding: '10px', height: '100%', minHeight: '78vh'}}>\n                                <Table \n                                    rows={rows}\n                                    page={page}\n                                    rowsPerPage={rowsPerPage}\n                                    handleChangePage={handleChangePage}\n                                    handleChangeRowsPerPage={handleChangeRowsPerPage}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item sm={matchWidth ? 6 : 12} style={{height: '78vh'}}>\n                            <div className={classes.graphStyle} style={{padding: '10px'}} >\n                                <Graph data={data}/>\n                            </div>\n                            <Grid container>\n                                <Grid item sm={matchWidthSec ? 6 : 12} >\n                                    <div style={{paddingRight: '10px', paddingLeft: '10px', paddingTop: '10px', width: '100%', minHeight: '100%'}}>\n                                        <BPMCard title={\"Average Heart Rate\"} bpm={avgRate}/>\n                                    </div>\n                                </Grid>\n                                <Grid item sm={matchWidthSec ? 6 : 12}>\n                                    <div style={{paddingRight: '10px', paddingLeft: '10px', paddingTop: '10px', minHeight: '100%'}}>\n                                        <BPMCard title={\"Last Recoded Heart Rate\"} bpm={lastRec}/>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Footer/>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}