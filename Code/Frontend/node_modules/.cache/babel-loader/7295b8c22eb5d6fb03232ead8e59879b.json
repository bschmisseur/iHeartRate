{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Documents/CST-452/IHeartRate/frontend-fire/src/components/Dashboard/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartkick.use(Highcharts);\nconst useStyles = makeStyles(() => ({\n  rootChart: {\n    width: '100%'\n  },\n  chartTitle: {\n    fontWeight: '300',\n    fontSize: '24px',\n    textAlign: 'center',\n    padding: '10px'\n  }\n}));\n\nconst Graph = props => {\n  _s();\n\n  const matchWidth = useMediaQuery('(min-width:1150px)');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.rootGraph,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chartTitle,\n      children: \"BPM VS Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      height: props.height ? props.height : matchWidth ? '40vh' : '420px',\n      messages: {\n        empty: \"No data\"\n      },\n      titel: \"Heart Rate\",\n      ytitle: \"Beats per Minute (BPM)\",\n      xtitle: \"Date Time\",\n      data: props.data,\n      discrete: true,\n      colors: ['#ac1c13', '#ac1c13']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Graph, \"sCTBLu9zLjkobSztyFFwsFDT06c=\", false, function () {\n  return [useMediaQuery, useStyles];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Documents/CST-452/IHeartRate/frontend-fire/src/components/Dashboard/Graph.js"],"names":["React","useMediaQuery","makeStyles","Paper","Chartkick","LineChart","Highcharts","use","useStyles","rootChart","width","chartTitle","fontWeight","fontSize","textAlign","padding","Graph","props","matchWidth","classes","rootGraph","height","empty","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,iBAArC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,UAAP;;AAEAF,SAAS,CAACG,GAAV,CAAcD,UAAd;AAEA,MAAME,SAAS,GAAGN,UAAU,CAAC,OAAO;AAChCO,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GADqB;AAI9BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,KADJ;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRC,IAAAA,SAAS,EAAE,QAHH;AAIRC,IAAAA,OAAO,EAAE;AAJD;AAJkB,CAAP,CAAD,CAA5B;;AAYA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,UAAU,GAAGjB,aAAa,CAAC,oBAAD,CAAhC;AAEA,QAAMkB,OAAO,GAAGX,SAAS,EAAzB;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEW,OAAO,CAACC,SAA1B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAED,OAAO,CAACR,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AACI,MAAA,MAAM,EAAEM,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACI,MAArB,GAA+BH,UAAU,GAAG,MAAH,GAAY,OADjE;AAEI,MAAA,QAAQ,EAAE;AAACI,QAAAA,KAAK,EAAE;AAAR,OAFd;AAGI,MAAA,KAAK,EAAG,YAHZ;AAII,MAAA,MAAM,EAAE,wBAJZ;AAKI,MAAA,MAAM,EAAE,WALZ;AAMI,MAAA,IAAI,EAAEL,KAAK,CAACM,IANhB;AAOI,MAAA,QAAQ,EAAI,IAPhB;AAQI,MAAA,MAAM,EAAI,CAAC,SAAD,EAAY,SAAZ;AARd;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtBD;;GAAMP,K;UACiBf,a,EAEHO,S;;;KAHdQ,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React, {  } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport 'date-fns';\n\nChartkick.use(Highcharts);\n\nconst useStyles = makeStyles(() => ({\n    rootChart: {\n        width: '100%',\n      },\n      chartTitle: {\n          fontWeight: '300',\n          fontSize: '24px',\n          textAlign: 'center',\n          padding: '10px'\n      },\n}));\n\nconst Graph = (props) => {\n    const matchWidth = useMediaQuery('(min-width:1150px)');\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.rootGraph}>\n            <div className={classes.chartTitle}>\n                BPM VS Time\n            </div>\n            <LineChart \n                height={props.height ? props.height : (matchWidth ? '40vh' : '420px')}\n                messages={{empty: \"No data\"}}\n                titel = \"Heart Rate\"\n                ytitle= \"Beats per Minute (BPM)\"\n                xtitle= \"Date Time\"\n                data={props.data} \n                discrete = {true}\n                colors = {['#ac1c13', '#ac1c13']}\n                />\n        </Paper>\n    )\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}