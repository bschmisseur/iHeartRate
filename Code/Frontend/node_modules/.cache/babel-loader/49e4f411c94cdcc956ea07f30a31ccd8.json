{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $find = require('../internals/array-iteration').find;\n\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true; // Shouldn't skip holes\n\nif (FIND in []) Array(1)[FIND](function () {\n  SKIPS_HOLES = false;\n}); // `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: SKIPS_HOLES\n}, {\n  find: function find(callbackfn\n  /* , that = undefined */\n  ) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\naddToUnscopables(FIND);","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/frontend-fire/node_modules/core-js-pure/modules/es.array.find.js"],"names":["$","require","$find","find","addToUnscopables","FIND","SKIPS_HOLES","Array","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,IAApD;;AACA,IAAIC,gBAAgB,GAAGH,OAAO,CAAC,iCAAD,CAA9B;;AAEA,IAAII,IAAI,GAAG,MAAX;AACA,IAAIC,WAAW,GAAG,IAAlB,C,CAEA;;AACA,IAAID,IAAI,IAAI,EAAZ,EAAgBE,KAAK,CAAC,CAAD,CAAL,CAASF,IAAT,EAAe,YAAY;AAAEC,EAAAA,WAAW,GAAG,KAAd;AAAsB,CAAnD,E,CAEhB;AACA;;AACAN,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAEJ;AAAxC,CAAD,EAAwD;AACvDH,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcQ;AAAW;AAAzB,IAAmD;AACvD,WAAOT,KAAK,CAAC,IAAD,EAAOS,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAZ;AACD;AAHsD,CAAxD,CAAD,C,CAMA;;AACAV,gBAAgB,CAACC,IAAD,CAAhB","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n"]},"metadata":{},"sourceType":"script"}