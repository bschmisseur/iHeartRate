{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/frontend-fire/src/components/Dashboard/ProfilePicture.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AWS from 'aws-sdk';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Loading from './../Navigation/Loading';\nimport UserService from './../../services/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET = 'iheartrate-pictures';\nconst REGION = 'us-west-1';\nAWS.config.update({\n  accessKeyId: 'AKIA4CZAE7UDP6PCURON',\n  secretAccessKey: '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'\n});\nconst myBucket = new AWS.S3({\n  params: {\n    Bucket: S3_BUCKET\n  },\n  region: REGION\n});\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    width: '100px',\n    height: '100px',\n    marginTop: '25px',\n    marginBottom: '25px',\n    alignSelf: 'center'\n  }\n}));\n\nconst ProfilePicture = props => {\n  _s();\n\n  useEffect(() => {\n    UserService.get(props.curAppleId).then(response => {});\n  }, []);\n  const classes = useStyles();\n  const [pictureSRC, setPictureSRC] = useState(\" \");\n  const inputFileMenu = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileInput = e => {\n    setPictureSRC(URL.createObjectURL(e.target.files[0]));\n    uploadFile(e.target.files[0]);\n  };\n\n  const handleIconButton = () => {\n    inputFileMenu.current.click();\n  };\n\n  const uploadFile = async file => {\n    setIsLoading(true);\n    const params = {\n      ACL: 'public-read',\n      Body: file,\n      Bucket: S3_BUCKET,\n      Key: file.name\n    }; // myBucket.putObject(params)\n    //     .on('httpUploadProgress', (evt) => {\n    //     })\n    //     .send((err) => {\n    //         if (err) console.log(err)\n    //     })\n\n    let response = await UserService.get(props.curAppleId);\n    let user = response[0];\n    console.log(user);\n\n    if (user === undefined) {\n      let json = JSON.stringify({\n        \"_id\": \"\",\n        \"displayName\": props.displayName,\n        \"appleId\": props.curAppleId,\n        \"profilePicture\": file.name\n      });\n      UserService.saveUser(json);\n    } else {\n      console.log(user[\"_id\"]);\n      let json = JSON.stringify({\n        \"_id\": user[\"_id\"],\n        \"displayName\": props.displayName,\n        \"appleId\": props.curAppleId,\n        \"profilePicture\": file.name\n      });\n      UserService.update(json);\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      id: \"contained-button-file\",\n      onChange: handleFileInput,\n      style: {\n        display: 'none'\n      },\n      ref: inputFileMenu,\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.avatar,\n      onClick: handleIconButton,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        style: {\n          width: '75px',\n          height: '75px'\n        },\n        src: pictureSRC,\n        alt: props.displayName,\n        children: props.displayName.charAt(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Loading, {\n      open: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfilePicture, \"PkaG/3f6QEsTUfb4nh182JxU0ec=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfilePicture;\nexport default ProfilePicture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePicture\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/frontend-fire/src/components/Dashboard/ProfilePicture.js"],"names":["React","useState","useRef","useEffect","makeStyles","AWS","IconButton","Avatar","Loading","UserService","S3_BUCKET","REGION","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","useStyles","theme","avatar","width","height","marginTop","marginBottom","alignSelf","ProfilePicture","props","get","curAppleId","then","response","classes","pictureSRC","setPictureSRC","inputFileMenu","isLoading","setIsLoading","handleFileInput","e","URL","createObjectURL","target","files","uploadFile","handleIconButton","current","click","file","ACL","Body","Key","name","user","console","log","undefined","json","JSON","stringify","displayName","saveUser","display","charAt"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AWS from 'aws-sdk'\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Loading from './../Navigation/Loading';\nimport UserService from './../../services/UserService';\n\n\nconst S3_BUCKET ='iheartrate-pictures';\nconst REGION ='us-west-1';\n\n\nAWS.config.update({\n    accessKeyId: 'AKIA4CZAE7UDP6PCURON',\n    secretAccessKey: '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'\n})\n\nconst myBucket = new AWS.S3({\n    params: { Bucket: S3_BUCKET},\n    region: REGION,\n})\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: '100px',\n        height: '100px',\n        marginTop: '25px',\n        marginBottom: '25px',\n        alignSelf: 'center'\n    },\n}));\n\nconst ProfilePicture = (props) => {\n    useEffect(() => {\n        UserService.get(props.curAppleId).then(response => {\n\n        })\n    },[])\n    const classes = useStyles();\n\n    const [pictureSRC, setPictureSRC] = useState(\" \")\n    const inputFileMenu = useRef(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleFileInput = (e) => {\n        setPictureSRC(URL.createObjectURL(e.target.files[0]));\n        uploadFile(e.target.files[0]);\n    }\n\n    const handleIconButton = () => {\n        inputFileMenu.current.click();\n    }\n\n    const uploadFile = async (file) => {\n        setIsLoading(true);\n        const params = {\n            ACL: 'public-read',\n            Body: file,\n            Bucket: S3_BUCKET,\n            Key: file.name\n        };\n\n        // myBucket.putObject(params)\n        //     .on('httpUploadProgress', (evt) => {\n\n        //     })\n        //     .send((err) => {\n        //         if (err) console.log(err)\n        //     })\n\n        let response = await UserService.get(props.curAppleId);\n        let user = response[0];\n        console.log(user);\n\n        if(user === undefined){\n            let json = JSON.stringify({\n                \"_id\": \"\",\n                \"displayName\": props.displayName,\n                \"appleId\" : props.curAppleId,\n                \"profilePicture\": file.name,\n                });\n\n            UserService.saveUser(json);\n        } else {\n            console.log(user[\"_id\"])\n            let json = JSON.stringify({\n                \"_id\": user[\"_id\"],\n                \"displayName\": props.displayName,\n                \"appleId\" : props.curAppleId,\n                \"profilePicture\": file.name,\n                });\n            UserService.update(json)\n            \n        }\n        setIsLoading(false);\n    }\n\n\n    return (\n    <div>\n        <input accept=\"image/*\" id=\"contained-button-file\" onChange={handleFileInput} style={{display: 'none' }} ref={inputFileMenu} type=\"file\"/>\n        <IconButton className={classes.avatar} onClick={handleIconButton}>\n            <Avatar style={{width: '75px', height: '75px'}} src={pictureSRC} alt={props.displayName}>\n              {props.displayName.charAt(0)}\n            </Avatar>\n        </IconButton>\n        <Loading open={isLoading}/>\n    </div>\n    )\n}\n\nexport default ProfilePicture;"]},"metadata":{},"sourceType":"module"}